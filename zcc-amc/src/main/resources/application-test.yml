server:
  port: 10001
grpc:
  server:
    port: 10011
  client:
    wechat:
      host: ${env.rpchost}
      port: 10015
    comnfunc:
      host: ${env.rpchost}
      port: 10016
logging:
  level:
    com:
      wensheng: TRACE
    root: WARN
mongodb:
  original:
    host: ${env.mongodb-host}
    port: 27017
    database: wensheng
  wszcc:
    host: ${env.mongodb-host}
    port: 27017
    database: wszcc

spring:
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
  datasource:
    password: ${env.dbpasswd}
    url: jdbc:mysql://${env.dbhost}:3306/ZCC_AMC?useUnicode=true&characterEncoding=utf-8&cachePrepStmts=true&useServerPrepStmts=true&rewriteBatchedStatements=true
    username: ${env.dbusername}
    driverClassName: com.mysql.cj.jdbc.Driver
    filters: stat
    maxActive: 20
    initialSize: 1
    maxWait: 60000
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20

  security:
    oauth2:
      client:
        registration:
          sample:
            client-id: sampleClientId
            authorizedGrantTypes: implicit
            scops: read,write
            accessTokenValiditySeconds: 3600
          amc-client-thirdpart:
            client-id: amcClient3rdPartId
            secret: secret
            scopes: thirdpart, read
            authorizedGrantTypes: implicit, refresh_token, client_credentials
          amc-admin:
            client-id: amcAdminId
            secret: secret
            scopes: amcAdmin,amcClient,read,write
            authorizedGrantTypes: password, authorization_code, refresh_token, client_credentials
            redirectUris: admin,http://localhost:10003/amc/login, http://localhost:8080/login/oauth2/code/custom, http://localhost:8080/ui-thymeleaf/login/oauth2/code/custom, http://localhost:8080/authorize/oauth2/code/bael, http://localhost:8080/login/oauth2/code/bael
          amc-client:
            client-id: amcClientId
            secret: secret
            scopes: amcClient,read,write
            redirectUris: client,http://localhost:10003/amc/login
            authorizedGrantTypes: password, authorization_code, refresh_token, client_credentials

  kafka:
    bootstrap-servers: ${env.kfkhost}:9092
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 200MB
      max-request-size: 215MB
      location: ${env.image-repo}
  task:
    scheduling:
      thread-name-prefix: synchWithScrapySystem
      cronExpr: 0 0 6,10,11,12,13,14,15,16,17,18,19,23 * * *
  cache:
    cache-names: DEBTPACK, DEBT
    caffeine:
      spec: maximumSize=500, expireAfterAccess=120s
mybatis:
  type-aliases-package: com.wensheng.zcc.amc.module
  mapper-locations:
    - classpath:mappers/*Mapper.xml
    - classpath:mappers/ext/*Mapper.xml

project:
  params:
    debt_image_path: ${env.image-repo}/debt/images/
    asset_image_path: ${env.image-repo}/asset/images/
    qrcode_image_path: ${env.image-repo}/qrcode/images/
    oss_end_point: oss-cn-beijing.aliyuncs.com
    oss_key_id: LTAIr4FuhRp7SciF
    oss_key_secret: jTtg1M1J39fTJewIwNDNnz09rGeBzC
    bucket_name: ws-zcc

---
# tag::wechatConfig
wechat:
  miniapp:
    #  appId: wxdb885be2c95a5b32
    #  appSecret: 279bfb3dd9d3e5eb43c480f625afdc0b
    #    get_token_url: https://api.weixin.qq.com/cgi-bin/token
    #    get_qrcode_url: https://api.weixin.qq.com/wxa/getwxacodeunlimit
    appId: wx43360e750e7099b9
    appSecret: e08507e5865fe1315e403d011693253f
    loginUrl: https://api.weixin.qq.com/sns/jscode2session?appid=${weixin.appId}&secret=${weixin.appSecret}&js_code=JSCODE&grant_type=authorization_code
    get_token_url: https://api.weixin.qq.com/cgi-bin/token
    get_qrcode_url: https://api.weixin.qq.com/wxa/getwxacodeunlimit

baidu:
  logis:
    appName: amc-lgs
    appAK: LMZGzYuSmmBvE5IS5EMdEsUGROx7r2G8
    appId: 16178564
    appSK: zvrxKOeG7Do7IZOcGZmKfKa2RK09GVYn
    getGeoURL: http://api.map.baidu.com/geocoder/v2/?address=%s&output=json&ak=%s&sn=%s

env:
  name: test
  dbhost: 10.20.100.70
  dbusername: root
  rpchost: localhost
  dbpasswd: wensheng
  kfkhost: 10.20.100.238
  mongodb-host: 10.20.100.235
  image-repo: /backup/temp
  oauth2:
    host: 10.20.100.235
    authLink: http://${env.oauth2.host}:10002
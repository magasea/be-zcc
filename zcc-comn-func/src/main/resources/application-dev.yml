server:
    port: 10006
grpc:
#    server:
    port: 10016
    enabled: true
    in-process-server-name: comnfuncGrpcServ

spring:
    autoconfigure:
        exclude:
            - org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
            - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
            - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

    #    datasource:
#        password: wensheng
#        url: jdbc:mysql://${env.dbhost}:3306/ZCC_WECHAT?useUnicode=true&characterEncoding=utf-8&cachePrepStmts=true&useServerPrepStmts=true&rewriteBatchedStatements=true
#        username: wenshengcust
#        driverClassName: com.mysql.cj.jdbc.Driver
#        filters: stat
#        maxActive: 20
#        initialSize: 1
#        maxWait: 60000
#        minIdle: 1
#        timeBetweenEvictionRunsMillis: 60000
#        minEvictableIdleTimeMillis: 300000
#        validationQuery: select 'x'
#        testWhileIdle: true
#        testOnBorrow: false
#        testOnReturn: false
#        poolPreparedStatements: true
#        maxOpenPreparedStatements: 20
#    jpa:
#        generate-ddl: false
#        hibernate:
#            ddl-auto: 'none '
#            naming:
#                physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#        properties:
#            hibernate:
#                hbm2ddl:
#                    auto: none
#        show-sql: true
    security:
        oauth2:
            client:
                registration:
                    sample:
                        client-id: sampleClientId
                        authorizedGrantTypes: implicit
                        scops: read,write
                        accessTokenValiditySeconds: 3600
                    amc-client-thirdpart:
                        client-id: amcClient3rdPartId
                        secret: secret
                        scopes: thirdpart, read
                        authorizedGrantTypes: implicit, refresh_token, client_credentials
                        redirectUris: admin,http://${env.oauth2.host}:10003/amc/login, http://${env.oauth2.host}:8080/login/oauth2/code/custom, http://${env.oauth2.host}:8080/ui-thymeleaf/login/oauth2/code/custom, http://${env.oauth2.host}:8080/authorize/oauth2/code/bael, http://${env.oauth2.host}:8080/login/oauth2/code/bael
                    amc-admin:
                        client-id: amcAdminId
                        secret: secret
                        scopes: amcAdmin,amcClient,read,write
                        authorizedGrantTypes: password, authorization_code, refresh_token, client_credentials
                        redirectUris: admin,http://${env.oauth2.host}:10003/amc/login, http://${env.oauth2.host}:8080/login/oauth2/code/custom, http://${env.oauth2.host}:8080/ui-thymeleaf/login/oauth2/code/custom, http://${env.oauth2.host}:8080/authorize/oauth2/code/bael, http://${env.oauth2.host}:8080/login/oauth2/code/bael
                    amc-wechat-client:
                        client-id: amcWXClientId
                        secret: secret
                        scopes: amcClient,read,write
                        redirectUris: client,http://${env.oauth2.host}:10003/amc/login
                        authorizedGrantTypes: password, authorization_code, refresh_token, client_credentials

    kafka:
        consumer:
            group-id: grp-zcc-wechat
            auto-offset-reset: earliest
        # change this property if you are using your own
        # Kafka cluster or your Docker IP is different
        bootstrap-servers: ${env.kfkhost}:9092
#    data:
#        mongodb:
#            database: wszcc_wechat
#            host: ${env.mongodb-host}
#            port: 27017
    task:
        scheduling:
            thread-name-prefix: amcscheduler-worker
            cronExpr: 0 0 6,12,18,0 * * *

    cache:
        cache-names: TOKEN
        caffeine:
            spec: maximumSize=500, expireAfterAccess=120s
    servlet:
        multipart:
            enabled: true
            file-size-threshold: 10240KB
            max-file-size: 10240KB
            max-request-size: 10240KB

weixin:
    prod:
        appId: wx6f60584065dd3e45
        appSecret: 3217390a438df7cd13189b6a9c69abf2
        encodingAesKey: abcdefghijklmnopqrstuvwxyz0123456789ABCDEFG
        token: wensheng
        userListUrl: https://api.weixin.qq.com/cgi-bin/user/get?access_token=%s&next_openid=%s
        loginUrl: https://api.weixin.qq.com/sns/jscode2session?appid=${weixin.prod.appId}&secret=${weixin.prod.appSecret}&js_code=JSCODE&grant_type=authorization_code
        get_public_token_url: https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=${weixin.prod.appId}&secret=${weixin.prod.appSecret}
    test:
        appId: wx273fd3accb57b9b1
        appSecret: b8e576b270ae4576baf0df3ea0e2b7bc
        encodingAesKey: abcdefghijklmnopqrstuvwxyz0123456789ABCDEFG
        token: wensheng
        userListUrl: https://api.weixin.qq.com/cgi-bin/user/get?access_token=%s&next_openid=%s
        loginUrl: https://api.weixin.qq.com/sns/jscode2session?appid=${weixin.test.appId}&secret=${weixin.test.appSecret}&js_code=JSCODE&grant_type=authorization_code
        get_public_token_url: https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=${weixin.test.appId}&secret=${weixin.test.appSecret}



project:
    params:
        wechat_image_path: ${env.image-repo}/wechat/images/




baidu:
    logis:
        appName: amc-lgs
        appAK: LMZGzYuSmmBvE5IS5EMdEsUGROx7r2G8
        appId: 16178564
        appSK: zvrxKOeG7Do7IZOcGZmKfKa2RK09GVYn
        getGeoURL: http://api.map.baidu.com/geocoder/v3/?address=%s&output=json&ak=%s&sn=%s
gaode:
#    String url = "http://restapi.amap.com/v3/geocode/geo?key=0c53a687090bf18a7394ffc66a0b6432&address="+urlEncoder.encode(address,"utf-8")
    key: 0c53a687090bf18a7394ffc66a0b6432
    geocoder-reverse: http://restapi.amap.com/v3/geocode/regeo?key=${gaode.key}&location=%s&radius=1000&extensions=base&batch=false&roadlevel=0
    geocoder: https://restapi.amap.com/v3/geocode/geo?address=%s&key=${gaode.key}
    regeocoder: https://restapi.amap.com/v3/geocode/regeo?key=${gaode.key}&location=%s&poitype=&radius=&extensions=base&batch=false&roadlevel=0



message:
    url: http://esms100.10690007.net/sms/mt
    spid: 9346
    sppassword: xuKh9a8u
    commond: MT_REQUEST
    multiCommond: MULTI_MT_REQUEST

kafka:
    topic_wechatuser: topic_wechatuser_${env.env-hint}

logging:
    level:
        com:
            wensheng: TRACE
        root: WARN


env:
    env-hint: dev
    dbhost: 10.20.100.235
    kfkhost: 10.20.100.238
    mongodb-host: 10.20.100.235
    image-repo: /disk/temp
    oauth2:
        host: localhost
        authLink: http://${env.oauth2.host}:10002
syntax = "proto3";
import "common.proto";
package com.wenshengamc.zcc.comnfunc.gaodegeo;


option java_multiple_files = true;



message WXUserGeoReq {
  string id = 1;

  string openId = 2;

  string unionId = 3;


  wenshengamc.zcc.common.GeoJson location = 4;

  string province = 5;
  string city = 6;

  string address = 7;

  wenshengamc.zcc.common.Timestamp updateTime = 8;

  wenshengamc.zcc.common.Timestamp createTime = 9;
}

message Address{
  string address = 1;
  string city = 2;
}

message WhoResponse {
  string key = 1;
  string value = 2;
}


message WXPubTokenResp {
  string wxPubToken = 1;
}

message WXPubTokenReq {
  string profileName = 1;
}


message AmcRegionItem {
    string code = 1;
    string name = 2;
    string lat = 3;
    string lon = 4;
}

message AmcRegionReq {
    string regName = 1;
}

message AmcRegionResp {
    repeated AmcRegionItem amcRegionItems = 1;
}

message PhoneMsgReq {
  string phoneNum = 1;
  string code = 2;
}

message PhoneMsgRep {
  string result = 1;
}

message GeoLngLatReq {
  double lng = 1;
  double lat = 2;
}
message GeoLocationResp {
  string provName = 1;
  string provCode = 2;
  string cityName = 3;
  string cityCode = 4;
}

message GeoIp2LocationResp{
  string province = 1;
  string city = 2;
  string adcode = 3;
  double lng = 4;
  double lat = 5;
  string provinceCode = 6;
}

message GeoIpReq{
  string ipadd = 1;
}

service ComnFuncService {
  rpc getAddress(WXUserGeoReq) returns (WXUserGeoReq);

  rpc getGeoByAddress(Address) returns (wenshengamc.zcc.common.GeoJson);

  rpc getAddressByGeoPoint(wenshengamc.zcc.common.GeoJson) returns (Address);

  rpc getWXPublicToken(WXPubTokenReq) returns (WXPubTokenResp);

  rpc getAmcRegionByName(AmcRegionReq) returns (AmcRegionResp);

  rpc sendVerifyCode(PhoneMsgReq) returns (PhoneMsgRep);

  rpc getAmcGeoInfoByLngLat(GeoLngLatReq) returns (GeoLocationResp);

  rpc getCityByIp(GeoIpReq) returns (GeoIp2LocationResp);

}

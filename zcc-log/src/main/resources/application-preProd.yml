server:
  port: 10003
spring:
  autoconfigure:
    exclude:
      #      - org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
      - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
      #      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration

  kafka:
    consumer:
      group-id: grp-zcc-logger
      auto-offset-reset: earliest
    # change this property if you are using your own
    # Kafka cluster or your Docker IP is different
    bootstrap-servers: ${env.kafka-host}:9092
  #  jpa:
  #      generate-ddl: false
  #      hibernate:
  #          ddl-auto: 'none'
  #          naming:
  #              physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  #      properties:
  #          hibernate:
  #              hbm2ddl:
  #                  auto: none
  #      show-sql: true
  data:
    mongodb:
      database: wszcc_log
      host: 10.20.100.235
      port: 27017

  security:
    oauth2:
      client:
        registration:

          amc-cust-client:
            client-id: amcClientId
            secret: secret
            scopes: amcClient,read,write
            redirectUris: client,http://${env.oauth2.host}:10003/amc/login
            authorizedGrantTypes: password, authorization_code, refresh_token, client_credentials

kafka:
  topic-wechat-userlocation: topic_wechat_userLocation_${env.env-prefix}
  topic_amc_useroper: topic_amc_userOper_${env.env-prefix}
  topic_amc_login: topic_amc_userLogin_${env.env-prefix}
  topic-amc-debt-create: topic_amc_debt_create_${env.name}
  topic-amc-asset-create: topic_amc_asset_create_${env.name}
env:
  env-prefix: prod
  kafka-host: 10.20.100.235
  oauth2:
    host: localhost
    authLink: http://${env.oauth2.host}:10002